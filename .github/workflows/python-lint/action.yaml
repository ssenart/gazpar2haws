name: 'python-lint'
description: 'Python linting workflow'

inputs:
  python-version:
    description: 'Python version'
    required: true
    default: '3.13'

runs:
  using: "composite"
  steps:
    #----------------------------------------------
    #  Set-up python
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}    

    #----------------------------------------------
    #  Load pip cache if cache exists
    - uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip
        restore-keys: ${{ runner.os }}-pip

    #----------------------------------------------
    #  Install linters
    - name: Install linters
      shell: bash
      run: python -m pip install pylint flake8 black isort mypy ruff

    #----------------------------------------------
    #  Run Pylint    
    - name: Pylint
      shell: bash
      run: pylint . --disable=logging-fstring-interpolation
      continue-on-error: true

    #----------------------------------------------
    #  Run Flake8
    - name: Flake8
      shell: bash
      run: flake8 .
      continue-on-error: true

    #----------------------------------------------
    #  Run Black
    - name: Black
      shell: bash
      run: black . --check
      continue-on-error: true

    #----------------------------------------------
    #  Run Isort
    - name: Isort
      shell: bash
      run: isort . --check-only
      continue-on-error: true

    #----------------------------------------------
    #  Run Mypy
    - name: Mypy
      shell: bash
      run: mypy .
      continue-on-error: true

    #----------------------------------------------
    #  Run Ruff
    - name: Ruff
      shell: bash
      run: ruff check .
      continue-on-error: true
