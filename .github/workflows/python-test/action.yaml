name: "python-test"
description: "Python testing workflow"

inputs:
  python-version:
    description: "Python version"
    required: true
    default: "3.13"

runs:
  using: "composite"
  steps:
    #----------------------------------------------
    #  Set-up python
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    #----------------------------------------------
    # Install poetry
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    #----------------------------------------------
    # Load cached venv if cache exists
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    #----------------------------------------------
    # Install dependencies if cache does not exist
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      shell: bash
      run: poetry install --no-interaction --no-root

    #----------------------------------------------
    # Install your root project, if required
    #----------------------------------------------
    - name: Install library
      shell: bash
      run: poetry install --no-interaction

    #----------------------------------------------
    # Build and start HA testing container
    - name: Build and start HA testing container
      shell: bash
      run: docker compose -f tests/containers/docker-compose.yaml up -d

    #----------------------------------------------
    # If not using devcontainer, run tests
    - name: Test with pytest
      shell: bash
      run: poetry run pytest
